---
alwaysApply: true
description: Code style, naming, control flow, and comments conventions for this repo
globs: *.php,*.js,*.ts,*.tsx
---

# Coding Standards

## Naming

-   Functions are verbs; variables are nouns. Avoid abbreviations.
-   Prefer full, descriptive names (e.g., `generateDateString`).

## Types

-   For TypeScript, annotate function signatures and exported APIs. Avoid `any`.

## Control Flow

-   Use guard clauses and early returns; avoid deep nesting.
-   Handle edge cases first; do not swallow exceptions.

## Comments

-   Only for complex logic; explain why, not how.
-   No inline noise; avoid TODOsâ€”implement them instead.

## Formatting

-   Match existing style. Do not reformat unrelated code.
-   Wrap long lines; prefer multi-line over overly terse one-liners.

## Laravel

-   Use Eloquent relationships and eager loading; avoid raw `DB::` unless necessary.
-   Create Form Requests for validation; avoid inline controller validation.
-   Use named routes and `route()` for URL generation.
-   Use queued jobs for slow tasks.

## Testing

-   Prefer feature tests. Use model factories.
-   For Filament/Livewire, use Livewire test helpers and assert notifications/redirects.

## Tooling

-   Run Pint after edits: `vendor/bin/pint --dirty`.
